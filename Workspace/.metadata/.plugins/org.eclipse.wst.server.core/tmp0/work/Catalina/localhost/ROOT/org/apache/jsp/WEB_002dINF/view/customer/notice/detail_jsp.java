/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-22 06:14:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.customer.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("			<main>\n");
      out.write("				<h2 class=\"main title\">공지사항</h2>\n");
      out.write("				\n");
      out.write("				<div class=\"breadcrumb\">\n");
      out.write("					<h3 class=\"hidden\">breadlet</h3>\n");
      out.write("					<ul>\n");
      out.write("						<li>home</li>\n");
      out.write("						<li>고객센터</li>\n");
      out.write("						<li>공지사항</li>\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				<div class=\"margin-top first\">\n");
      out.write("						<h3 class=\"hidden\">공지사항 내용</h3>\n");
      out.write("						<table class=\"table\">\n");
      out.write("							<tbody>\n");
      out.write("								<tr>\n");
      out.write("									<th>제목</th>\n");
      out.write("									<td class=\"text-align-left text-indent text-strong text-orange\" colspan=\"3\">스프링 8강까지의 예제 코드</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<th>작성일</th>\n");
      out.write("									<td class=\"text-align-left text-indent\" colspan=\"3\">2019-08-18	</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<th>작성자</th>\n");
      out.write("									<td>newlec</td>\n");
      out.write("									<th>조회수</th>\n");
      out.write("									<td>148</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<th>첨부파일</th>\n");
      out.write("									<td colspan=\"3\"></td>\n");
      out.write("								</tr>\n");
      out.write("								<tr class=\"content\">\n");
      out.write("									<td colspan=\"4\">안녕하세요. 뉴렉처입니다.<div><br></div><div>현재 진행중인 스프링 DI 8강까지의 예제입니다.</div><div><br></div><div><a href=\"http://www.newlecture.com/resource/spring2.zip\"><b><u><font size=\"5\" color=\"#dd8a00\">예제 다운로드하기</font></u></b></a></div><div><br></div><div><br></div></td>\n");
      out.write("								</tr>\n");
      out.write("							</tbody>\n");
      out.write("						</table>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"margin-top text-align-center\">\n");
      out.write("						<a class=\"btn btn-list\" href=\"/notice/list\">목록</a>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"margin-top\">\n");
      out.write("						<table class=\"table border-top-default\">\n");
      out.write("							<tbody>\n");
      out.write("								\n");
      out.write("								<tr>\n");
      out.write("									<th>다음글</th>\n");
      out.write("									<td colspan=\"3\"  class=\"text-align-left text-indent\">다음글이 없습니다.</td>\n");
      out.write("								</tr>\n");
      out.write("								\n");
      out.write("									\n");
      out.write("								\n");
      out.write("								\n");
      out.write("								<tr>\n");
      out.write("									<th>이전글</th>\n");
      out.write("									<td colspan=\"3\"  class=\"text-align-left text-indent\"><a class=\"text-blue text-strong\" href=\"\">스프링 DI 예제 코드</a></td>\n");
      out.write("								</tr>\n");
      out.write("								\n");
      out.write("								\n");
      out.write("							</tbody>\n");
      out.write("						</table>\n");
      out.write("					</div>			\n");
      out.write("					\n");
      out.write("			</main>		");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
